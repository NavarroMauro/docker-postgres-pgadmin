services:
  postgres_conndatos:
    image: postgres
    container_name: postgres_conndatos
    hostname: postgres_conndatos_host
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_CONNDATOS_USER}
      - POSTGRES_PASSWORD=${POSTGRES_CONNDATOS_PASSWORD}
      - POSTGRES_DB=${POSTGRES_CONNDATOS_DB}
    ports:
      - ${POSTGRES_CONNDATOS_PORT}:5432
    volumes:
      - ./postgres/conndatos/data:/var/lib/postgresql/data
      - ./postgres/conndatos/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_CONNDATOS_USER} -d ${POSTGRES_CONNDATOS_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres_lms:
    image: postgres
    container_name: postgres_lms
    hostname: postgres_lms_host
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_LMS_USER}
      - POSTGRES_PASSWORD=${POSTGRES_LMS_PASSWORD}
      - POSTGRES_DB=${POSTGRES_LMS_DB}
    ports:
      - ${POSTGRES_LMS_PORT}:5432
    volumes:
      - ./postgres/lms/data:/var/lib/postgresql/data
      - ./postgres/lms/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_LMS_USER} -d ${POSTGRES_LMS_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - POSTGRES_LMS_HOST=${POSTGRES_LMS_HOST}
      - POSTGRES_LMS_DB=${POSTGRES_LMS_DB}
      - POSTGRES_LMS_USER=${POSTGRES_LMS_USER}
      - POSTGRES_LMS_PASSWORD=${POSTGRES_LMS_PASSWORD}
      - POSTGRES_LMS_PORT=5432
      - POSTGRES_CONNDATOS_HOST=${POSTGRES_CONNDATOS_HOST}
      - POSTGRES_CONNDATOS_DB=${POSTGRES_CONNDATOS_DB}
      - POSTGRES_CONNDATOS_USER=${POSTGRES_CONNDATOS_USER}
      - POSTGRES_CONNDATOS_PASSWORD=${POSTGRES_CONNDATOS_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    depends_on:
      postgres_conndatos:
        condition: service_healthy
      postgres_lms:
        condition: service_healthy
    user: root
    volumes:
      - ./pgadmin/entrypoint.sh:/entrypoint_custom.sh
      - ./pgadmin/data/:/var/lib/pgadmin/
    entrypoint: ["/bin/sh", "-c", "chmod +x /entrypoint_custom.sh && /entrypoint_custom.sh"]

volumes:
  postgres_conndatos_data:
  postgres_lms_data:
  pgadmin_data:
